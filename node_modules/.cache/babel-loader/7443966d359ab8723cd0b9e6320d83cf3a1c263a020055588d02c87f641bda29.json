{"ast":null,"code":"var _jsxFileName = \"D:\\\\Micro\\\\Resturant-website-Reactjs-MUI\\\\src\\\\pages\\\\Booking.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import Layout from \"../components/Layout/Layout\";\n// import '../styles/Login.css';\n\n// function Booking() {\n//     const [values, setValues] = useState({\n//         name:'',\n//         date: '',\n//         time: '',\n//         numberOfTables: ''\n//     });\n//     const [errors, setErrors] = useState({});\n//     const navigate = useNavigate();\n\n//     const handleChange = (e) => {\n//         setValues({ ...values, [e.target.name]: e.target.value });\n//     };\n\n//       const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//           const response = await axios.post('https://localhost:7092/api/Reservation', values);\n//           console.log(response.data);\n//           window.alert('Table is Booked Successfully'); \n//           navigate('/home');\n//         } catch (errors) {\n//           setErrors(errors.response.data.message);\n//         }\n//       };\n\n//     // const validateForm = () => {\n//     //     let errors = {};\n//     //     let isValid = true;\n//     //     if (!values.date) {\n//     //         errors.date = \"Name is required\";\n//     //         isValid = false;\n//     //     }\n\n//     //     if (!values.date) {\n//     //         errors.date = \"Date is required\";\n//     //         isValid = false;\n//     //     }\n\n//     //     if (!values.time) {\n//     //         errors.time = \"Time is required\";\n//     //         isValid = false;\n//     //     }\n\n//     //     if (!values.numberOfTables) {\n//     //         errors.numberOfTables = \"Number of tables is required\";\n//     //         isValid = false;\n//     //     }\n\n//     //     setErrors(errors);\n//     //     return isValid;\n//     // };\n\n//     return (\n//          <Layout>\n\n//             <div className=\"d-flex w-100 vh-100 justify-content-center backgroundcolorset\">\n//                 <div className=\"w-50 border border-black shadow  px-5 pt-3 pb-5 rounded border-set\">\n//                     <h3 className=\"head\">Make a Reservation</h3><br />\n//                     <form onSubmit={handleSubmit}>\n//                     <div className=\"mb-2\">\n//                         <label htmlFor=\"name\"> Name:</label>\n//                         <input\n//                             type=\"text\"\n//                             name=\"name\"\n//                             className=\"form-control\"\n//                             placeholder=\"Enter Customer Name\"\n//                             value={values.name}\n//                             onChange={e => setValues({ ...values, Name: e.target.value })}\n//                             required\n//                         />\n//                         {errors.name && <div className=\"text-danger\">{errors.name}</div>}\n//                     </div><br/>\n\n//                         <div className=\"mb-2\">\n//                             <label className=\"book-color\"  htmlFor=\"date\">Date:</label>\n//                             <input\n//                                 required\n//                                 type=\"date\"\n//                                 name=\"date\"\n//                                 className=\"form-control\"\n//                                 placeholder=\"Enter Date\"\n//                                 onChange={handleChange}\n//                             />\n//                             {errors.date && <span className=\"text-danger\">{errors.date}</span>}\n//                         </div><br />\n//                         <div className=\"mb-2\">\n//                             <label className=\"book-color\" htmlFor=\"time\">Time:</label>\n//                             <input\n//                                 required\n//                                 type=\"time\"\n//                                 name=\"time\"\n//                                 className=\"form-control\"\n//                                 placeholder=\"Enter Time\"\n//                                 onChange={handleChange}\n//                             />\n//                             {errors.time && <span className=\"text-danger\">{errors.time}</span>}\n//                         </div><br />\n//                         <div className=\"mb-2\">\n//                             <label className=\"book-color\"  htmlFor=\"numberOfTables\">Number of Tables:</label>\n//                             <input\n//                                 required\n//                                 type=\"number\"\n//                                 name=\"numberOfTables\"\n//                                 className=\"form-control\"\n//                                 placeholder=\"Enter Number of Tables\"\n//                                 onChange={handleChange}\n//                             />\n//                             {errors.numberOfTables && <span className=\"text-danger\">{errors.numberOfTables}</span>}\n//                         </div><br />\n//                         <button className=\"btn btn-success m-1\" type=\"submit\">Save</button>\n//                         <Link to=\"/\" className=\"btn btn-primary m-1\">Back</Link>\n//                     </form>\n//                     {errors && <div className=\"alert alert-danger\" role=\"alert\">{errors}</div>}\n//                 </div>\n//             </div>\n//  </Layout> \n//     );\n// }\n\n// export default Booking;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Layout from \"../components/Layout/Layout\";\nimport '../styles/Login.css';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Booking() {\n  _s();\n  const [CustomerID, setCustomerID] = useState();\n  const Email = Cookies.get('Email');\n  useEffect(() => {\n    axios.post('https://localhost:7092/api/Customer_Details/FindEmail', {\n      customer_Email: Email\n    }).then(res => {\n      console.log(res.data);\n      setCustomerID(res.data.customer_Id);\n    }).catch(err => console.log(err));\n  }, []);\n  const [values, setValues] = useState({\n    Custom: CustomerID,\n    date: '',\n    time: '',\n    numberOfTables: ''\n  });\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n  const validateForm = () => {\n    let formErrors = {};\n    let isValid = true;\n\n    // Validation logic here\n    if (!values.name) {\n      formErrors.name = \"Name is required\";\n      isValid = false;\n    }\n    if (!values.date) {\n      formErrors.date = \"Date is required\";\n      isValid = false;\n    }\n    if (!values.time) {\n      formErrors.time = \"Time is required\";\n      isValid = false;\n    }\n    if (!values.numberOfTables) {\n      formErrors.numberOfTables = \"Number of tables is required\";\n      isValid = false;\n    }\n    setErrors(formErrors);\n    return isValid;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (validateForm()) {\n      try {\n        const response = await axios.post('https://localhost:7092/api/Reservation', values);\n        console.log(response.data);\n        window.alert('Table is Booked Successfully');\n        navigate('/home');\n      } catch (error) {\n        setErrors({\n          message: error.response.data.message\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex w-100 vh-100 justify-content-center backgroundcolorset\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-50 border border-black shadow px-5 pt-3 pb-5 rounded border-set\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"head\",\n          children: \"Make a Reservation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 65\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \" Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              className: \"form-control\",\n              placeholder: \"Enter Customer Name\",\n              value: values.name,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-danger\",\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"book-color\",\n              htmlFor: \"date\",\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"date\",\n              className: \"form-control\",\n              placeholder: \"Enter Date\",\n              value: values.date,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this), errors.date && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: errors.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"book-color\",\n              htmlFor: \"time\",\n              children: \"Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              name: \"time\",\n              className: \"form-control\",\n              placeholder: \"Enter Time\",\n              value: values.time,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this), errors.time && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: errors.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"book-color\",\n              htmlFor: \"numberOfTables\",\n              children: \"Number of Tables:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"numberOfTables\",\n              className: \"form-control\",\n              placeholder: \"Enter Number of Tables\",\n              value: values.numberOfTables,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this), errors.numberOfTables && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: errors.numberOfTables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success m-1\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"btn btn-primary m-1\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), errors.message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          role: \"alert\",\n          children: errors.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 9\n  }, this);\n}\n_s(Booking, \"is1JhkmMP2b3JxXAynCIwDEOJxU=\", false, function () {\n  return [useNavigate];\n});\n_c = Booking;\nexport default Booking;\nvar _c;\n$RefreshReg$(_c, \"Booking\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","useNavigate","Layout","Cookies","Booking","CustomerID","setCustomerID","Email","get","post","customer_Email","then","res","console","log","data","customer_Id","catch","err","values","setValues","Custom","date","time","numberOfTables","errors","setErrors","navigate","handleChange","e","target","name","value","validateForm","formErrors","isValid","handleSubmit","preventDefault","response","window","alert","error","message"],"sources":["D:/Micro/Resturant-website-Reactjs-MUI/src/pages/Booking.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import Layout from \"../components/Layout/Layout\";\r\n// import '../styles/Login.css';\r\n\r\n// function Booking() {\r\n//     const [values, setValues] = useState({\r\n//         name:'',\r\n//         date: '',\r\n//         time: '',\r\n//         numberOfTables: ''\r\n//     });\r\n//     const [errors, setErrors] = useState({});\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleChange = (e) => {\r\n//         setValues({ ...values, [e.target.name]: e.target.value });\r\n//     };\r\n\r\n//       const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//           const response = await axios.post('https://localhost:7092/api/Reservation', values);\r\n//           console.log(response.data);\r\n//           window.alert('Table is Booked Successfully'); \r\n//           navigate('/home');\r\n//         } catch (errors) {\r\n//           setErrors(errors.response.data.message);\r\n//         }\r\n//       };\r\n    \r\n     \r\n\r\n\r\n//     // const validateForm = () => {\r\n//     //     let errors = {};\r\n//     //     let isValid = true;\r\n//     //     if (!values.date) {\r\n//     //         errors.date = \"Name is required\";\r\n//     //         isValid = false;\r\n//     //     }\r\n\r\n\r\n//     //     if (!values.date) {\r\n//     //         errors.date = \"Date is required\";\r\n//     //         isValid = false;\r\n//     //     }\r\n\r\n//     //     if (!values.time) {\r\n//     //         errors.time = \"Time is required\";\r\n//     //         isValid = false;\r\n//     //     }\r\n\r\n//     //     if (!values.numberOfTables) {\r\n//     //         errors.numberOfTables = \"Number of tables is required\";\r\n//     //         isValid = false;\r\n//     //     }\r\n\r\n//     //     setErrors(errors);\r\n//     //     return isValid;\r\n//     // };\r\n\r\n//     return (\r\n//          <Layout>\r\n          \r\n//             <div className=\"d-flex w-100 vh-100 justify-content-center backgroundcolorset\">\r\n//                 <div className=\"w-50 border border-black shadow  px-5 pt-3 pb-5 rounded border-set\">\r\n//                     <h3 className=\"head\">Make a Reservation</h3><br />\r\n//                     <form onSubmit={handleSubmit}>\r\n//                     <div className=\"mb-2\">\r\n//                         <label htmlFor=\"name\"> Name:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"name\"\r\n//                             className=\"form-control\"\r\n//                             placeholder=\"Enter Customer Name\"\r\n//                             value={values.name}\r\n//                             onChange={e => setValues({ ...values, Name: e.target.value })}\r\n//                             required\r\n//                         />\r\n//                         {errors.name && <div className=\"text-danger\">{errors.name}</div>}\r\n//                     </div><br/>\r\n                   \r\n//                         <div className=\"mb-2\">\r\n//                             <label className=\"book-color\"  htmlFor=\"date\">Date:</label>\r\n//                             <input\r\n//                                 required\r\n//                                 type=\"date\"\r\n//                                 name=\"date\"\r\n//                                 className=\"form-control\"\r\n//                                 placeholder=\"Enter Date\"\r\n//                                 onChange={handleChange}\r\n//                             />\r\n//                             {errors.date && <span className=\"text-danger\">{errors.date}</span>}\r\n//                         </div><br />\r\n//                         <div className=\"mb-2\">\r\n//                             <label className=\"book-color\" htmlFor=\"time\">Time:</label>\r\n//                             <input\r\n//                                 required\r\n//                                 type=\"time\"\r\n//                                 name=\"time\"\r\n//                                 className=\"form-control\"\r\n//                                 placeholder=\"Enter Time\"\r\n//                                 onChange={handleChange}\r\n//                             />\r\n//                             {errors.time && <span className=\"text-danger\">{errors.time}</span>}\r\n//                         </div><br />\r\n//                         <div className=\"mb-2\">\r\n//                             <label className=\"book-color\"  htmlFor=\"numberOfTables\">Number of Tables:</label>\r\n//                             <input\r\n//                                 required\r\n//                                 type=\"number\"\r\n//                                 name=\"numberOfTables\"\r\n//                                 className=\"form-control\"\r\n//                                 placeholder=\"Enter Number of Tables\"\r\n//                                 onChange={handleChange}\r\n//                             />\r\n//                             {errors.numberOfTables && <span className=\"text-danger\">{errors.numberOfTables}</span>}\r\n//                         </div><br />\r\n//                         <button className=\"btn btn-success m-1\" type=\"submit\">Save</button>\r\n//                         <Link to=\"/\" className=\"btn btn-primary m-1\">Back</Link>\r\n//                     </form>\r\n//                     {errors && <div className=\"alert alert-danger\" role=\"alert\">{errors}</div>}\r\n//                 </div>\r\n//             </div>\r\n//  </Layout> \r\n//     );\r\n// }\r\n\r\n// export default Booking;\r\n\r\nimport React, { useState,useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Layout from \"../components/Layout/Layout\";\r\nimport '../styles/Login.css';\r\nimport Cookies from 'js-cookie'\r\n\r\nfunction Booking() {\r\n    const [CustomerID,setCustomerID] = useState();\r\n    const Email=Cookies.get('Email');\r\nuseEffect(()=>{\r\n      axios.post('https://localhost:7092/api/Customer_Details/FindEmail',{\r\n        customer_Email:Email\r\n    })\r\n    .then(res => {\r\n     console.log(res.data);\r\n    setCustomerID(res.data.customer_Id);\r\n})\r\n\r\n.catch(err => console.log(err));\r\n    },[])\r\n    \r\n    const [values, setValues] = useState({\r\n        \r\n        Custom:CustomerID,\r\n        date: '',\r\n        time: '',\r\n        numberOfTables: ''\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (e) => {\r\n        setValues({ ...values, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const validateForm = () => {\r\n        let formErrors = {};\r\n        let isValid = true;\r\n\r\n        // Validation logic here\r\n        if (!values.name) {\r\n            formErrors.name = \"Name is required\";\r\n            isValid = false;\r\n        }\r\n        if (!values.date) {\r\n            formErrors.date = \"Date is required\";\r\n            isValid = false;\r\n        }\r\n        if (!values.time) {\r\n            formErrors.time = \"Time is required\";\r\n            isValid = false;\r\n        }\r\n        if (!values.numberOfTables) {\r\n            formErrors.numberOfTables = \"Number of tables is required\";\r\n            isValid = false;\r\n        }\r\n\r\n        setErrors(formErrors);\r\n        return isValid;\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (validateForm()) {\r\n            try {\r\n                const response = await axios.post('https://localhost:7092/api/Reservation', values);\r\n                console.log(response.data);\r\n                window.alert('Table is Booked Successfully');\r\n                navigate('/home');\r\n            } catch (error) {\r\n                setErrors({ message: error.response.data.message });\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"d-flex w-100 vh-100 justify-content-center backgroundcolorset\">\r\n                <div className=\"w-50 border border-black shadow px-5 pt-3 pb-5 rounded border-set\">\r\n                    <h3 className=\"head\">Make a Reservation</h3><br />\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"mb-2\">\r\n                            <label htmlFor=\"name\"> Name:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Enter Customer Name\"\r\n                                value={values.name}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            {errors.name && <div className=\"text-danger\">{errors.name}</div>}\r\n                        </div><br/>\r\n                        <div className=\"mb-2\">\r\n                            <label className=\"book-color\" htmlFor=\"date\">Date:</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                name=\"date\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Enter Date\"\r\n                                value={values.date}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            {errors.date && <span className=\"text-danger\">{errors.date}</span>}\r\n                        </div><br />\r\n                        <div className=\"mb-2\">\r\n                            <label className=\"book-color\" htmlFor=\"time\">Time:</label>\r\n                            <input\r\n                                type=\"time\"\r\n                                name=\"time\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Enter Time\"\r\n                                value={values.time}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            {errors.time && <span className=\"text-danger\">{errors.time}</span>}\r\n                        </div><br />\r\n                        <div className=\"mb-2\">\r\n                            <label className=\"book-color\" htmlFor=\"numberOfTables\">Number of Tables:</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"numberOfTables\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Enter Number of Tables\"\r\n                                value={values.numberOfTables}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            {errors.numberOfTables && <span className=\"text-danger\">{errors.numberOfTables}</span>}\r\n                        </div><br />\r\n                        <button className=\"btn btn-success m-1\" type=\"submit\">Save</button>\r\n                        <Link to=\"/\" className=\"btn btn-primary m-1\">Back</Link>\r\n                    </form>\r\n                    {errors.message && <div className=\"alert alert-danger\" role=\"alert\">{errors.message}</div>}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Booking;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAO,qBAAqB;AAC5B,OAAOC,OAAO,MAAM,WAAW;AAAA;AAE/B,SAASC,OAAO,GAAG;EAAA;EACf,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAAGT,QAAQ,EAAE;EAC7C,MAAMU,KAAK,GAACJ,OAAO,CAACK,GAAG,CAAC,OAAO,CAAC;EACpCV,SAAS,CAAC,MAAI;IACRC,KAAK,CAACU,IAAI,CAAC,uDAAuD,EAAC;MACjEC,cAAc,EAACH;IACnB,CAAC,CAAC,CACDI,IAAI,CAACC,GAAG,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;MACtBT,aAAa,CAACM,GAAG,CAACG,IAAI,CAACC,WAAW,CAAC;IACvC,CAAC,CAAC,CAEDC,KAAK,CAACC,GAAG,IAAIL,OAAO,CAACC,GAAG,C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"},"metadata":{},"sourceType":"module","externalDependencies":[]}