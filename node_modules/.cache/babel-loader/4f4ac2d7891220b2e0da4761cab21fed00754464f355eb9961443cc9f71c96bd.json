{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Updatedisplay() {\n  _s();\n  const {\n    sid\n  } = useParams();\n  const [service, setService] = useState({\n    Restaurant_Name: '',\n    Email_Id: '',\n    ContactNumber: '',\n    Password: '',\n    Location: '',\n    Type: '',\n    Cuisine: '',\n    TotalTables: 0,\n    Status: 'waiting for approval',\n    Personal_Email: '',\n    RestaurantImage: null,\n    UniqueFileName: ''\n  });\n  const [validation, valchange] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get(`http://localhost:5151/api/Backend/GetById/${sid}`).then(res => {\n      const servicedata = res.data;\n      setService(servicedata);\n      console.log(\"Get data:\", servicedata);\n    }).catch(error => {\n      if (error.response && error.response.status === 404) {\n        console.log(\"Service not found\");\n      }\n      console.log(\"Error:\", error.message);\n    });\n  }, [sid]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setService(prevService => ({\n      ...prevService,\n      [name]: value\n    }));\n  };\n  const handleImageChange = e => {\n    setService({\n      ...service,\n      serviceImage: e.target.files[0]\n    });\n  };\n  const handlesubmit = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('Restaurant_Name', service.Restaurant_Name);\n    formData.append('Email_Id', service.Email_Id);\n    formData.append('ContactNumber', service.ContactNumber);\n    formData.append('Password', service.Password);\n    formData.append('Location', service.Location);\n    formData.append('Type', service.Type);\n    formData.append('Cuisine', service.Cuisine);\n    formData.append('TotalTables', service.TotalTables);\n    formData.append('Status', service.Status);\n    formData.append('Personal_Email', service.Personal_Email);\n    formData.append('RestaurantImage', service.RestaurantImage);\n    if (!isNaN(service.Restaurant_Name) || !isNaN(service.serviceDescription)) {\n      alert('Name cannot have an integer');\n    } else {\n      axios.put(`http://localhost:5151/api/Backend/UpdateService/${sid}`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        alert('Updated successfully.');\n        navigate(\"/AdminDisplay\");\n      }).catch(error => {\n        console.log(\"Error:\", error.message);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  // Your JSX for the form goes here\n  // ...\n  ;\n}\n_s(Updatedisplay, \"kMJk5GZ9aKjHFbMklcot7cyWFo4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Updatedisplay;\n;\nvar _c;\n$RefreshReg$(_c, \"Updatedisplay\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","Updatedisplay","sid","service","setService","Restaurant_Name","Email_Id","ContactNumber","Password","Location","Type","Cuisine","TotalTables","Status","Personal_Email","RestaurantImage","UniqueFileName","validation","valchange","navigate","get","then","res","servicedata","data","console","log","catch","error","response","status","message","handleChange","e","name","value","target","prevService","handleImageChange","serviceImage","files","handlesubmit","preventDefault","formData","FormData","append","isNaN","serviceDescription","alert","put","headers"],"sources":["D:/Micro/Restaurant_Booking_React/src/RestaurantDetails/RestaurantUpdate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nexport default function Updatedisplay() {\r\n    const { sid } = useParams();\r\n \r\n    const [service, setService] = useState({\r\n        Restaurant_Name: '',\r\n        Email_Id: '',\r\n        ContactNumber: '',\r\n        Password: '',\r\n        Location: '',\r\n        Type: '',\r\n        Cuisine: '',\r\n        TotalTables: 0,\r\n        Status: 'waiting for approval',\r\n        Personal_Email: '',\r\n        RestaurantImage: null,\r\n        UniqueFileName: '',\r\n    });\r\n \r\n    const [validation, valchange] = useState(false);\r\n    const navigate = useNavigate();\r\n \r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5151/api/Backend/GetById/${sid}`)\r\n            .then((res) => {\r\n                const servicedata = res.data;\r\n                setService(servicedata);\r\n                console.log(\"Get data:\", servicedata)\r\n            })\r\n            .catch((error) => {\r\n                if (error.response && error.response.status === 404) {\r\n                    console.log(\"Service not found\")\r\n                }\r\n                console.log(\"Error:\", error.message);\r\n            });\r\n    }, [sid]);\r\n \r\n \r\n \r\n    const handleChange = (e) => {\r\n \r\n        const { name, value } = e.target;\r\n \r\n        setService(prevService => ({\r\n \r\n            ...prevService,\r\n \r\n            [name]: value\r\n \r\n        }));\r\n \r\n    };\r\n    const handleImageChange = (e) => {\r\n \r\n        setService({\r\n \r\n            ...service,\r\n \r\n            serviceImage: e.target.files[0],\r\n \r\n        });\r\n \r\n    };\r\n    const handlesubmit = (e) => {\r\n \r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('Restaurant_Name', service.Restaurant_Name);\r\n        formData.append('Email_Id', service.Email_Id);\r\n        formData.append('ContactNumber', service.ContactNumber);\r\n        formData.append('Password', service.Password);\r\n        formData.append('Location', service.Location);\r\n        formData.append('Type', service.Type);\r\n        formData.append('Cuisine', service.Cuisine);\r\n        formData.append('TotalTables', service.TotalTables);\r\n        formData.append('Status', service.Status);\r\n        formData.append('Personal_Email', service.Personal_Email);\r\n        formData.append('RestaurantImage', service.RestaurantImage);\r\n \r\n \r\n        if (!isNaN(service.Restaurant_Name) || !isNaN(service.serviceDescription)) {\r\n            alert('Name cannot have an integer');\r\n        }\r\n        else {\r\n            axios.put(`http://localhost:5151/api/Backend/UpdateService/${sid}`, formData, {\r\n                headers: { \"Content-Type\": \"multipart/form-data\" }\r\n            })\r\n                .then((res) => {\r\n                    alert('Updated successfully.');\r\n                    navigate(\"/AdminDisplay\");\r\n                })\r\n \r\n                .catch((error) => {\r\n                    console.log(\"Error:\", error.message);\r\n                });\r\n        }\r\n    };\r\n  return (\r\n    <>\r\n    </>\r\n    // Your JSX for the form goes here\r\n    // ...\r\n  );\r\n};\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}