{"ast":null,"code":"// import { useState,useEffect } from 'react'\n// import axios from 'axios';\n// import React from 'react'\n// import { NavLink,useNavigate ,Link} from 'react-router-dom'\n// import Layout from '../components/Layout/Layout';\n// import Cookies from 'js-cookie';\n\n// function Login() {\n//   const initalvalues = {  Email: \"\", Password: \"\" };\n//     const [formValues, setformValues] = useState(initalvalues);\n//     const[formErrors,setFormErrors]=useState({});\n//     const [isSubmit,setIsSubmit]=useState(false);\n//     const navigate = useNavigate();\n\n//     const handleChange = (e) => {\n//         const {name,value}=e.target;\n//         setformValues({...formValues,[name]:value})\n\n//             };\n//     const handleSubmit = async(e)=>{\n//         e.preventDefault();\n//         setFormErrors(validate(formValues));\n//         setIsSubmit(true);\n//         try {\n\n//           const response = await axios.post('https://localhost:7092/api/Login/login', formValues);\n\n//           console.log('Login Sucessfully:', response.data);\n\n//           window.alert('Login successfuly');\n\n//           Cookies.set('Email', formValues.Email, { expires: 7 });\n\n//           // navigate('/menu');\n\n//       }\n\n//       catch (error) {\n\n//           console.error('Error:', error);\n\n//       }\n//     }\n//     useEffect(()=>{\n//         console.log(formErrors);\n//         if(Object.keys(formErrors).length === 0 && isSubmit){\n//             console.log(formValues);\n//         }\n//     },[formErrors])\n//         const validate=(values)=>{\n//             const errors ={};\n//             const regex=/\\b[A-Za-z0-9._%+-]+@center\\.com\\b/;\n\n//             if(!values.Email){\n//                 errors.Email=\"Email is required!\";\n//             }\n//             else {\n//               let name = values.Email.substring(0,values.Email.indexOf('@'));\n//               if (regex.test(values.Email)){\n//                 navigate(\"/menu\", {state: {username: name, email: values.Email} })\n//               }else if (values.Email==='admin@admin.com'&& values.Password==='12345'){\n//                 navigate(\"/adminhome\")\n//               }else{\n//                 navigate(\"/home\", {state: {username: name, email: values.Email} })\n//               }\n//               if(!values.Password){\n//                 errors.Password=\"Password is required!\";\n//               }else if (values.Password.length < 4 ){\n//                 errors.Password=\"Password must be more than 4 charcters\"\n//               }else if (values.Password.length > 10 ){\n//                 errors.Password=\"Password must be exceed more than 10 charcters\"\n//               }\n//             }\n//             if(Object.keys(formErrors).length === 0 && isSubmit){\n//               navigate(\"/home\")\n//             }\n\n//             return errors;\n//         }\n\n//   return (\n//     <>\n\n//     <div class='container p-5 w-25 border border-dark'>\n\n//       <form onSubmit={handleSubmit}>\n\n//         <h1 style={{ display: 'flex', justifyContent: 'center' }}>Login</h1>\n//         <hr></hr>\n//         <div className=\"form-floating   \">\n//           <input type=\"email\" class=\"form-control\" id=\"email\" name=\"Email\" value={formValues.Email} onChange={handleChange}/>\n//           <label htmlFor=\"email\" className={formValues.Email ? \"active\" : \"\"}>Email</label>\n//         </div><p>{formErrors.Email}</p>\n\n//         <div class=\"form-floating \">\n//           <input type=\"password\" class=\"form-control\" id=\"pwd\" name=\"Password\" value={formValues.Password} onChange={handleChange} />\n//           <label htmlFor=\"pwd\">Password</label>\n//         </div><p>{formErrors.Password}</p>\n//         <div class=\"footer\">\n\n//           <button class=\"btn btn-primary\">Login</button>\n//           <NavLink to='/signup' style={{ display: 'flex', justifyContent: 'flex-end' }}>Don't Have an account? Signup!</NavLink>\n//         </div>\n//       </form>\n\n//     </div>\n//     </>\n//   )\n// }\n\n// export default Login","map":{"version":3,"names":[],"sources":["D:/Micro/Resturant-website-Reactjs-MUI/src/pages/Login.js"],"sourcesContent":["// import { useState,useEffect } from 'react'\r\n// import axios from 'axios';\r\n// import React from 'react'\r\n// import { NavLink,useNavigate ,Link} from 'react-router-dom'\r\n// import Layout from '../components/Layout/Layout';\r\n// import Cookies from 'js-cookie';\r\n \r\n// function Login() {\r\n//   const initalvalues = {  Email: \"\", Password: \"\" };\r\n//     const [formValues, setformValues] = useState(initalvalues);\r\n//     const[formErrors,setFormErrors]=useState({});\r\n//     const [isSubmit,setIsSubmit]=useState(false);\r\n//     const navigate = useNavigate();\r\n \r\n//     const handleChange = (e) => {\r\n//         const {name,value}=e.target;\r\n//         setformValues({...formValues,[name]:value})\r\n       \r\n//             };\r\n//     const handleSubmit = async(e)=>{\r\n//         e.preventDefault();\r\n//         setFormErrors(validate(formValues));\r\n//         setIsSubmit(true);\r\n//         try {\r\n\r\n \r\n//           const response = await axios.post('https://localhost:7092/api/Login/login', formValues);\r\n         \r\n//           console.log('Login Sucessfully:', response.data);\r\n \r\n//           window.alert('Login successfuly');\r\n\r\n//           Cookies.set('Email', formValues.Email, { expires: 7 });\r\n         \r\n//           // navigate('/menu');\r\n \r\n//       }\r\n \r\n//       catch (error) {\r\n \r\n//           console.error('Error:', error);\r\n \r\n//       }\r\n//     }\r\n//     useEffect(()=>{\r\n//         console.log(formErrors);\r\n//         if(Object.keys(formErrors).length === 0 && isSubmit){\r\n//             console.log(formValues);\r\n//         }\r\n//     },[formErrors])\r\n//         const validate=(values)=>{\r\n//             const errors ={};\r\n//             const regex=/\\b[A-Za-z0-9._%+-]+@center\\.com\\b/;\r\n           \r\n//             if(!values.Email){\r\n//                 errors.Email=\"Email is required!\";\r\n//             }\r\n//             else {\r\n//               let name = values.Email.substring(0,values.Email.indexOf('@'));\r\n//               if (regex.test(values.Email)){\r\n//                 navigate(\"/menu\", {state: {username: name, email: values.Email} })\r\n//               }else if (values.Email==='admin@admin.com'&& values.Password==='12345'){\r\n//                 navigate(\"/adminhome\")\r\n//               }else{\r\n//                 navigate(\"/home\", {state: {username: name, email: values.Email} })\r\n//               }\r\n//               if(!values.Password){\r\n//                 errors.Password=\"Password is required!\";\r\n//               }else if (values.Password.length < 4 ){\r\n//                 errors.Password=\"Password must be more than 4 charcters\"\r\n//               }else if (values.Password.length > 10 ){\r\n//                 errors.Password=\"Password must be exceed more than 10 charcters\"\r\n//               }\r\n//             }\r\n//             if(Object.keys(formErrors).length === 0 && isSubmit){\r\n//               navigate(\"/home\")\r\n//             }\r\n \r\n               \r\n//             return errors;\r\n//         }\r\n \r\n     \r\n//   return (\r\n//     <>\r\n         \r\n               \r\n//     <div class='container p-5 w-25 border border-dark'>\r\n             \r\n \r\n//       <form onSubmit={handleSubmit}>\r\n \r\n//         <h1 style={{ display: 'flex', justifyContent: 'center' }}>Login</h1>\r\n//         <hr></hr>\r\n//         <div className=\"form-floating   \">\r\n//           <input type=\"email\" class=\"form-control\" id=\"email\" name=\"Email\" value={formValues.Email} onChange={handleChange}/>\r\n//           <label htmlFor=\"email\" className={formValues.Email ? \"active\" : \"\"}>Email</label>\r\n//         </div><p>{formErrors.Email}</p>\r\n \r\n//         <div class=\"form-floating \">\r\n//           <input type=\"password\" class=\"form-control\" id=\"pwd\" name=\"Password\" value={formValues.Password} onChange={handleChange} />\r\n//           <label htmlFor=\"pwd\">Password</label>\r\n//         </div><p>{formErrors.Password}</p>\r\n//         <div class=\"footer\">\r\n \r\n//           <button class=\"btn btn-primary\">Login</button>\r\n//           <NavLink to='/signup' style={{ display: 'flex', justifyContent: 'flex-end' }}>Don't Have an account? Signup!</NavLink>\r\n//         </div>\r\n//       </form>\r\n \r\n//     </div>\r\n//     </>\r\n//   )\r\n// }\r\n \r\n// export default Login\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAGA;AACA;;AAGA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}