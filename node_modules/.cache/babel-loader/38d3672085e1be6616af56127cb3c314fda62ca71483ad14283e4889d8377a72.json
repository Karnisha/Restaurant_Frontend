{"ast":null,"code":"// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { Link, useNavigate ,useParams} from \"react-router-dom\";\n// import Header from \"../components/Layout/Header\";\n\n// function AdminUpdate() {\n//     const {id}=useParams();\n//     const [values, setValues] = useState({\n//         restaurant_Name: '',\n//         email_Id: '',\n//         contactNumber: '',\n//         password: '',\n//         location: '',\n//         type: '',\n//         cuisine: '',\n//         totalTables: 0,\n//         status: 'waiting for approval',\n//         personal_Email: ''\n//     });\n//     const [errors, setErrors] = useState({});\n//     const navigate = useNavigate();\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n//         console.log(values); \n\n//     axios.put('https://localhost:7092/api/Restaurant_Details/' + id, values) \n\n//         .then(res => { \n\n//             console.log(res.data); \n\n//             alert('car details updated successfully..'); \n\n//             navigate('/adminview'); \n\n//         }) \n\n//         .catch(err => console.log(err)); \n//     }\n\n//     const validateForm = () => {\n//         let isValid = true;\n//         let errors = {};\n\n//         if (!values.restaurant_Name.trim()) {\n//             errors.restaurant_Name = 'Restaurant Name is required';\n//             isValid = false;\n//         }\n\n//         if (!values.email_Id.trim()) {\n//             errors.email_Id = 'Email is required';\n//             isValid = false;\n//         }\n\n//         if (!values.contactNumber.trim()) {\n//             errors.contactNumber = 'Contact Number is required';\n//             isValid = false;\n//         }\n\n//         if (!values.password.trim()) {\n//             errors.password = 'Password is required';\n//             isValid = false;\n//         }\n\n//         if (!values.location.trim()) {\n//             errors.location = 'Location is required';\n//             isValid = false;\n//         }\n\n//         if (!values.type.trim()) {\n//             errors.type = 'Type is required';\n//             isValid = false;\n//         }\n\n//         if (!values.cuisine.trim()) {\n//             errors.cuisine = 'Cuisine is required';\n//             isValid = false;\n//         }\n\n//         if (values.totalTables <= 0) {\n//             errors.totalTables = 'Total Tables should be greater than 0';\n//             isValid = false;\n//         }\n\n//         if (!values.personal_Email.trim()) {\n//             errors.personal_Email = 'Email is required';\n//             isValid = false;\n//         }\n\n//         setErrors(errors);\n//         return isValid;\n//     }\n\n//     return (\n//       <>\n//          <h1>RESTAURANT MANAGEMENT SYSTEM</h1>\n//         <div className=\"d-flex w-100 vh-100 justify-content-center backgroundcolorset\">\n//             <div className=\"w-50 border  border-black shadow bg-dark px-5 pt-3 pb-5 rounded border-set \">\n//                 <h3>Add Restaurant</h3><br/>\n//                 <form onSubmit={handleSubmit}>\n//                     <div className=\"mb-2\">\n//                         <label htmlFor=\"name\">Restaurant Name:</label>\n//                         <input\n//                             type=\"text\"\n//                             name=\"name\"\n//                             className=\"form-control\"\n//                             placeholder=\"Enter Restaurant Name\"\n//                             value={values.restaurant_Name}\n//                             onChange={e => setValues({ ...values, Restaurant_Name: e.target.value })}\n//                             required\n//                         />\n//                         {errors.restaurant_Name && <div className=\"text-danger\">{errors.Restaurant_Name}</div>}\n//                     </div><br/>\n//                     <div className=\"mb-2\">\n//                         <label htmlFor=\"email\">Email:</label>\n//                         <input\n//                             type=\"email\"\n//                             name=\"email_Id\"\n//                             className=\"form-control\"\n//                             placeholder=\"Enter Email\"\n//                             value={values.email_Id}\n//                             onChange={e => setValues({ ...values, Email_Id: e.target.value })}\n//                             required\n//                         />\n//                         {errors.Email_Id && <div className=\"text-danger\">{errors.Email_Id}</div>}\n//                     </div><br/>\n//                     <div className=\"mb-2\">\n//                         <label htmlFor=\"contact\">Contact Number:</label>\n//                         <input\n//                             type=\"text\"\n//                             name=\"contact\"\n//                             className=\"form-control\"\n//                             placeholder=\"Enter Contact Number\"\n//                             value={values.contactNumber}\n//                             onChange={e => setValues({ ...values, ContactNumber: e.target.value })}\n//                             required\n//                         />\n//                         {errors.ContactNumber && <div className=\"text-danger\">{errors.ContactNumber}</div>}\n//                     </div><br/>\n//                     <div className=\"mb-2\">\n//                         <label htmlFor=\"password\">Password:</label>\n//                         <input\n//                             type=\"password\"\n//                             name=\"password\"\n//                             className=\"form-control\"\n//                             placeholder=\"Enter Password\"\n//                             value={values.Password}\n//                             onChange={e => setValues({ ...values, Password: e.target.value })}\n//                             required\n//                         />\n//                         {errors.Password && <div className=\"text-danger\">{errors.Password}</div>}\n//                     </div><br/>\n//                     <div className=\"mb-2\">\n//                         <label htmlFor=\"location\">Location:</label>\n//                         <input\n//                             type=\"text\"\n//                             name=\"location\"\n//                             className=\"form-control\"\n//                             placeholder=\"Enter Location\"\n//                             value={values.location}\n//                             onChange={e => setValues({ ...values, Location: e.target.value })}\n//                             required\n//                         />\n//                         {errors.Location && <div className=\"text-danger\">{errors.Location}</div>}\n//                     </div><br/>\n//                     <div className=\"mb-2\">\n//                         <label htmlFor=\"type\">Type:</label>\n//                         <input\n//                             type=\"text\"\n//                             name=\"type\"\n//                             className=\"form-control\"\n//                             placeholder=\"Enter Type\"\n//                             value={values.type}\n//                             onChange={e => setValues({ ...values, Type: e.target.value })}\n//                             required\n//                         />\n//                         {errors.Type && <div className=\"text-danger\">{errors.Type}</div>}\n//                     </div><br/>\n//                     <div className=\"mb-2\">\n//                         <label htmlFor=\"cuisine\">Cuisine:</label>\n//                         <input\n//                             type=\"text\"\n//                             name=\"cuisine\"\n//                             className=\"form-control\"\n//                             placeholder=\"Enter Cuisine\"\n//                             value={values.cuisine}\n//                             onChange={e => setValues({ ...values, Cuisine: e.target.value })}\n//                             required\n//                         />\n//                         {errors.Cuisine && <div className=\"text-danger\">{errors.Cuisine}</div>}\n//                     </div><br/>\n//                     <div className=\"mb-2\">\n//                         <label htmlFor=\"totalTables\">Total Tables:</label>\n//                         <input\n//                             type=\"number\"\n//                             name=\"totalTables\"\n//                             className=\"form-control\"\n//                             placeholder=\"Enter Total Tables\"\n//                             value={values.totalTables}\n//                             onChange={e => setValues({ ...values, TotalTables: parseInt(e.target.value) || 0 })}\n//                             required\n//                         />\n//                         {errors.TotalTables && <div className=\"text-danger\">{errors.TotalTables}</div>}\n//                     </div><br/>\n//                     <div className=\"mb-2\">\n//                         <label htmlFor=\"email\">Personal Email:</label>\n//                         <input\n//                             type=\"email\"\n//                             name=\"email\"\n//                             className=\"form-control\"\n//                             placeholder=\"Enter Email\"\n//                             value={values.personal_Email}\n//                             onChange={e => setValues({ ...values, Personal_Email: e.target.value })}\n//                             required\n//                         />\n//                         {errors.Personal_Email && <div className=\"text-danger\">{errors.Personal_Email}</div>}\n//                     </div><br/>\n//                     <button className=\"btn btn-success m-1\" type=\"submit\" >Update</button>\n//                     <Link to=\"/adminview\" className=\"btn btn-primary m-1\">Back</Link>\n//                 </form>\n//             </div>\n//         </div>\n//      </>  \n//     );\n// }\n\n// export default AdminUpdate;","map":{"version":3,"names":[],"sources":["D:/Micro/Resturant-website-Reactjs-MUI/src/Admin/AdminUpdate.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Link, useNavigate ,useParams} from \"react-router-dom\";\r\n// import Header from \"../components/Layout/Header\";\r\n\r\n// function AdminUpdate() {\r\n//     const {id}=useParams();\r\n//     const [values, setValues] = useState({\r\n//         restaurant_Name: '',\r\n//         email_Id: '',\r\n//         contactNumber: '',\r\n//         password: '',\r\n//         location: '',\r\n//         type: '',\r\n//         cuisine: '',\r\n//         totalTables: 0,\r\n//         status: 'waiting for approval',\r\n//         personal_Email: ''\r\n//     });\r\n//     const [errors, setErrors] = useState({});\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n//         console.log(values); \r\n\r\n//     axios.put('https://localhost:7092/api/Restaurant_Details/' + id, values) \r\n\r\n//         .then(res => { \r\n\r\n//             console.log(res.data); \r\n\r\n//             alert('car details updated successfully..'); \r\n\r\n//             navigate('/adminview'); \r\n\r\n//         }) \r\n\r\n//         .catch(err => console.log(err)); \r\n//     }\r\n\r\n//     const validateForm = () => {\r\n//         let isValid = true;\r\n//         let errors = {};\r\n\r\n//         if (!values.restaurant_Name.trim()) {\r\n//             errors.restaurant_Name = 'Restaurant Name is required';\r\n//             isValid = false;\r\n//         }\r\n\r\n//         if (!values.email_Id.trim()) {\r\n//             errors.email_Id = 'Email is required';\r\n//             isValid = false;\r\n//         }\r\n\r\n//         if (!values.contactNumber.trim()) {\r\n//             errors.contactNumber = 'Contact Number is required';\r\n//             isValid = false;\r\n//         }\r\n\r\n//         if (!values.password.trim()) {\r\n//             errors.password = 'Password is required';\r\n//             isValid = false;\r\n//         }\r\n\r\n//         if (!values.location.trim()) {\r\n//             errors.location = 'Location is required';\r\n//             isValid = false;\r\n//         }\r\n\r\n//         if (!values.type.trim()) {\r\n//             errors.type = 'Type is required';\r\n//             isValid = false;\r\n//         }\r\n\r\n//         if (!values.cuisine.trim()) {\r\n//             errors.cuisine = 'Cuisine is required';\r\n//             isValid = false;\r\n//         }\r\n\r\n//         if (values.totalTables <= 0) {\r\n//             errors.totalTables = 'Total Tables should be greater than 0';\r\n//             isValid = false;\r\n//         }\r\n        \r\n//         if (!values.personal_Email.trim()) {\r\n//             errors.personal_Email = 'Email is required';\r\n//             isValid = false;\r\n//         }\r\n\r\n//         setErrors(errors);\r\n//         return isValid;\r\n//     }\r\n\r\n//     return (\r\n//       <>\r\n//          <h1>RESTAURANT MANAGEMENT SYSTEM</h1>\r\n//         <div className=\"d-flex w-100 vh-100 justify-content-center backgroundcolorset\">\r\n//             <div className=\"w-50 border  border-black shadow bg-dark px-5 pt-3 pb-5 rounded border-set \">\r\n//                 <h3>Add Restaurant</h3><br/>\r\n//                 <form onSubmit={handleSubmit}>\r\n//                     <div className=\"mb-2\">\r\n//                         <label htmlFor=\"name\">Restaurant Name:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"name\"\r\n//                             className=\"form-control\"\r\n//                             placeholder=\"Enter Restaurant Name\"\r\n//                             value={values.restaurant_Name}\r\n//                             onChange={e => setValues({ ...values, Restaurant_Name: e.target.value })}\r\n//                             required\r\n//                         />\r\n//                         {errors.restaurant_Name && <div className=\"text-danger\">{errors.Restaurant_Name}</div>}\r\n//                     </div><br/>\r\n//                     <div className=\"mb-2\">\r\n//                         <label htmlFor=\"email\">Email:</label>\r\n//                         <input\r\n//                             type=\"email\"\r\n//                             name=\"email_Id\"\r\n//                             className=\"form-control\"\r\n//                             placeholder=\"Enter Email\"\r\n//                             value={values.email_Id}\r\n//                             onChange={e => setValues({ ...values, Email_Id: e.target.value })}\r\n//                             required\r\n//                         />\r\n//                         {errors.Email_Id && <div className=\"text-danger\">{errors.Email_Id}</div>}\r\n//                     </div><br/>\r\n//                     <div className=\"mb-2\">\r\n//                         <label htmlFor=\"contact\">Contact Number:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"contact\"\r\n//                             className=\"form-control\"\r\n//                             placeholder=\"Enter Contact Number\"\r\n//                             value={values.contactNumber}\r\n//                             onChange={e => setValues({ ...values, ContactNumber: e.target.value })}\r\n//                             required\r\n//                         />\r\n//                         {errors.ContactNumber && <div className=\"text-danger\">{errors.ContactNumber}</div>}\r\n//                     </div><br/>\r\n//                     <div className=\"mb-2\">\r\n//                         <label htmlFor=\"password\">Password:</label>\r\n//                         <input\r\n//                             type=\"password\"\r\n//                             name=\"password\"\r\n//                             className=\"form-control\"\r\n//                             placeholder=\"Enter Password\"\r\n//                             value={values.Password}\r\n//                             onChange={e => setValues({ ...values, Password: e.target.value })}\r\n//                             required\r\n//                         />\r\n//                         {errors.Password && <div className=\"text-danger\">{errors.Password}</div>}\r\n//                     </div><br/>\r\n//                     <div className=\"mb-2\">\r\n//                         <label htmlFor=\"location\">Location:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"location\"\r\n//                             className=\"form-control\"\r\n//                             placeholder=\"Enter Location\"\r\n//                             value={values.location}\r\n//                             onChange={e => setValues({ ...values, Location: e.target.value })}\r\n//                             required\r\n//                         />\r\n//                         {errors.Location && <div className=\"text-danger\">{errors.Location}</div>}\r\n//                     </div><br/>\r\n//                     <div className=\"mb-2\">\r\n//                         <label htmlFor=\"type\">Type:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"type\"\r\n//                             className=\"form-control\"\r\n//                             placeholder=\"Enter Type\"\r\n//                             value={values.type}\r\n//                             onChange={e => setValues({ ...values, Type: e.target.value })}\r\n//                             required\r\n//                         />\r\n//                         {errors.Type && <div className=\"text-danger\">{errors.Type}</div>}\r\n//                     </div><br/>\r\n//                     <div className=\"mb-2\">\r\n//                         <label htmlFor=\"cuisine\">Cuisine:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"cuisine\"\r\n//                             className=\"form-control\"\r\n//                             placeholder=\"Enter Cuisine\"\r\n//                             value={values.cuisine}\r\n//                             onChange={e => setValues({ ...values, Cuisine: e.target.value })}\r\n//                             required\r\n//                         />\r\n//                         {errors.Cuisine && <div className=\"text-danger\">{errors.Cuisine}</div>}\r\n//                     </div><br/>\r\n//                     <div className=\"mb-2\">\r\n//                         <label htmlFor=\"totalTables\">Total Tables:</label>\r\n//                         <input\r\n//                             type=\"number\"\r\n//                             name=\"totalTables\"\r\n//                             className=\"form-control\"\r\n//                             placeholder=\"Enter Total Tables\"\r\n//                             value={values.totalTables}\r\n//                             onChange={e => setValues({ ...values, TotalTables: parseInt(e.target.value) || 0 })}\r\n//                             required\r\n//                         />\r\n//                         {errors.TotalTables && <div className=\"text-danger\">{errors.TotalTables}</div>}\r\n//                     </div><br/>\r\n//                     <div className=\"mb-2\">\r\n//                         <label htmlFor=\"email\">Personal Email:</label>\r\n//                         <input\r\n//                             type=\"email\"\r\n//                             name=\"email\"\r\n//                             className=\"form-control\"\r\n//                             placeholder=\"Enter Email\"\r\n//                             value={values.personal_Email}\r\n//                             onChange={e => setValues({ ...values, Personal_Email: e.target.value })}\r\n//                             required\r\n//                         />\r\n//                         {errors.Personal_Email && <div className=\"text-danger\">{errors.Personal_Email}</div>}\r\n//                     </div><br/>\r\n//                     <button className=\"btn btn-success m-1\" type=\"submit\" >Update</button>\r\n//                     <Link to=\"/adminview\" className=\"btn btn-primary m-1\">Back</Link>\r\n//                 </form>\r\n//             </div>\r\n//         </div>\r\n//      </>  \r\n//     );\r\n// }\r\n\r\n// export default AdminUpdate;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}